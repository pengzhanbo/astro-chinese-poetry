---
import type { ImgAttributes } from 'astro:assets'

export interface Props extends ImgAttributes {
  src: string | { light?: string; dark?: string }
}

const { src: _src, ...other } = Astro.props
const src = typeof _src === 'string' ? _src : undefined
const mode = typeof _src === 'string' ? undefined : _src
const className = Astro.props['class:list'] || Astro.props.class
---

{
  mode ? (
    <>
      <Astro.self
        class:list={['light', className]}
        src={mode.light}
        {...other}
      />
      <Astro.self class:list={['dark', className]} src={mode.dark} {...other} />
    </>
  ) : (
    src && <img {src} {...other} class:list={['a-image', className]} />
  )
}

<style is:global>
  html:not(.dark) .a-image.dark {
    display: none;
  }
  .dark .a-image.light {
    display: none;
  }
</style>
